---
- name: Quadlet volume file
  containers.podman.podman_volume:
    name: node-exporter
    state: quadlet
    label:
      app: node-exporter
  notify: Restart Node-exporter

- name: Quadlet container file
  containers.podman.podman_container:
    name: node-exporter
    image: "{{ node_exporter_image }}"
    state: quadlet
    command:
      - --path.procfs=/host/proc
      - --path.rootfs=/rootfs
      - --path.sysfs=/host/sys
      - --collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    network: host
    label:
      app: node-exporter
    quadlet_options:
      - |

        [Unit]
        Description=Prometheus exporter for hardware and OS metrics exposed by *NIX kernels, written in Go with pluggable metric collectors.
        After=network-online.target
        Wants=network-online.target

        [Service]
        Restart=always
        RestartSec=3
        TimeoutStartSec=900

        [Install]
        WantedBy=default.target
  notify: Restart Node-exporter

- name: Enable systemd service
  ansible.builtin.systemd:
    name: node-exporter
    enabled: true
    state: started
    daemon_reload: true

- name: Alloy | Edit configuration
  ansible.builtin.blockinfile:
    path: "{{ node_exporter_config_path }}/config.alloy"
    marker: /// {mark} ANSIBLE MANAGED BLOCK - node_exporter
    block: |
      prometheus.scrape "node_exporter" {
        targets = [{
            __address__ = "{{ ansible_hostname }}:9100",
          }]
        forward_to = [prometheus.relabel.metrics_node_exporter.receiver]
      }

      prometheus.relabel "metrics_node_exporter" {
        rule {
          target_label = "job"
          replacement  = "node_exporter"
        }
        rule {
          target_label = "instance"
          replacement  = constants.hostname
        }
        forward_to = [prometheus.remote_write.victoriametrics.receiver]
      }

  notify: Restart alloy
