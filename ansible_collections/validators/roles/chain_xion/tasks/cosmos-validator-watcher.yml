---
- name: Cosmos-validator-watcher | Set mainnet vars
  when: chain_xion_network == "mainnet"
  ansible.builtin.set_fact:
    quadlet_command:
      - --http-addr :{{ chain_xion_watcher_prometheus_port }}
      - --node http://localhost:{{ chain_xion_xiond_rpc_port }}
      - --validator 636D3F847A47A01472489C28224702AA6F50F49A:{{ chain_xion_chain_id }}

- name: Cosmos-validator-watcher | Quadlet container file
  containers.podman.podman_container:
    name: cosmos-validator-watcher-{{ chain_xion_chain_id }}
    image: "{{ chain_xion_cosmos_validator_watcher_image }}"
    state: quadlet
    command: "{{ quadlet_command }}"
    network: host
    label:
      app: xion-{{ chain_xion_chain_id }}
    quadlet_options:
      - |

        [Unit]
        Description=cosmos-validator-watcher for {{ chain_xion_chain_id }}
        After=network-online.target
        Wants=network-online.target

        [Service]
        Restart=always
        RestartSec=3
        TimeoutStartSec=900

        [Install]
        WantedBy=default.target
  notify: Restart cosmos-validator-watcher-{{ chain_xion_chain_id }}

- name: Cosmos-validator-watcher | Add sudoers file
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/{{ chain_xion_user }}-cosmos-validator-watcher-{{ chain_xion_network }}"
    content: |
      {{ chain_xion_user }} ALL=(ALL) NOPASSWD: /usr/bin/systemctl start cosmos-validator-watcher-{{ chain_xion_network }}.service
      {{ chain_xion_user }} ALL=(ALL) NOPASSWD: /usr/bin/systemctl stop cosmos-validator-watcher-{{ chain_xion_network }}.service
      {{ chain_xion_user }} ALL=(ALL) NOPASSWD: /usr/bin/systemctl restart cosmos-validator-watcher-{{ chain_xion_network }}.service
      {{ chain_xion_user }} ALL=(ALL) NOPASSWD: /usr/bin/systemctl status cosmos-validator-watcher-{{ chain_xion_network }}.service
    mode: "0440"
    validate: /usr/sbin/visudo -cf %s

- name: Cosmos-validator-watcher | Enable systemd service
  ansible.builtin.systemd:
    name: cosmos-validator-watcher-{{ chain_xion_chain_id }}
    enabled: true
    state: started
    daemon_reload: true
