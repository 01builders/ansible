---
- name: Celestia-appd | Ensure celestia-appd repository is present
  ansible.builtin.git:
    repo: https://github.com/celestiaorg/celestia-app.git
    dest: "/home/{{ chain_celestia_user }}/celestia-app"
    version: "tags/{{ chain_celestia_appd_version }}"
  become: true
  become_user: "{{ chain_celestia_user }}"
  register: repo_cloned

- name: Celestia-appd | Build and install
  when: repo_cloned.changed # noqa: no-handler
  ansible.builtin.shell:
    chdir: /home/{{ chain_celestia_user }}/celestia-app
    cmd: |
      source ~/.bash_profile
      make install
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ chain_celestia_user }}"
  changed_when: true
  notify: Restart celestia-app-{{ chain_celestia_network }}

- name: Celestia-appd | Configure v3
  when: repo_cloned.changed and 'v3.0.1' in chain_celestia_appd_version # noqa: no-handler
  ansible.builtin.shell:
    chdir: /home/{{ chain_celestia_user }}/celestia-app
    cmd: |
      source ~/.bash_profile
      make configure-v3
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ chain_celestia_user }}"
  changed_when: true
  notify: Restart celestia-app-{{ chain_celestia_network }}

- name: Celestia-appd | enable-bbr
  when: repo_cloned.changed and 'v3.0.1' in chain_celestia_appd_version # noqa: no-handler
  ansible.builtin.shell:
    chdir: /home/{{ chain_celestia_user }}/celestia-app
    cmd: |
      source ~/.bash_profile
      make enable-bbr
  args:
    executable: /bin/bash
  changed_when: true

- name: Celestia-appd | Firewall Allow Incoming on public interface
  community.general.ufw:
    rule: allow
    interface: "{{ public_interface }}"
    direction: in
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
  loop:
    - { port: "26656", proto: tcp } # P2P

- name: Celestia-appd | Check configuration file
  ansible.builtin.stat:
    path: /home/{{ chain_celestia_user }}/.celestia-app/config/config.toml
  register: node_init

- name: Celestia-appd | Initialize Celestia Validator node
  when: not node_init.stat.exists # noqa: no-handler
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      source ~/.bash_profile
      celestia-appd config chain-id {{ chain_celestia_chain_id }}
      celestia-appd init binary-builders --chain-id {{ chain_celestia_chain_id }}
      celestia-appd download-genesis {{ chain_celestia_chain_id }}
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ chain_celestia_user }}"
  changed_when: true

- name: Celestia-appd | Create systemd service file
  ansible.builtin.copy:
    dest: /etc/systemd/system/celestia-app-{{ chain_celestia_network }}.service
    content: |
      [Unit]
      Description=Celestia-app-{{ chain_celestia_network }} (Validator)
      After=network.target

      [Service]
      Type=simple
      ExecStart=/home/{{ chain_celestia_user }}/go/bin/celestia-appd start
      User={{ chain_celestia_user }}
      Group=users
      Restart=always
      RestartSec=3
      TimeoutStartSec=900
      LimitNOFILE=1400000

      [Install]
      WantedBy=multi-user.target
    mode: "0644"
  notify: Restart celestia-app-{{ chain_celestia_network }}

- name: Celestia-appd | Add sudoers file
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/{{ chain_celestia_user }}-app-{{ chain_celestia_network }}"
    content: |
      {{ chain_celestia_user }} ALL=(ALL) NOPASSWD: /usr/bin/systemctl start celestia-app-{{ chain_celestia_network }}.service
      {{ chain_celestia_user }} ALL=(ALL) NOPASSWD: /usr/bin/systemctl stop celestia-app-{{ chain_celestia_network }}.service
      {{ chain_celestia_user }} ALL=(ALL) NOPASSWD: /usr/bin/systemctl restart celestia-app-{{ chain_celestia_network }}.service
      {{ chain_celestia_user }} ALL=(ALL) NOPASSWD: /usr/bin/systemctl status celestia-app-{{ chain_celestia_network }}.service
    mode: "0440"
    validate: /usr/sbin/visudo -cf %s

- name: Celestia-appd | app.toml
  ansible.builtin.replace:
    path: /home/{{ chain_celestia_user }}/.celestia-app/config/app.toml
    regexp: "{{ item.regexp }}"
    replace: "{{ item.line }}"
  notify: Restart celestia-app-{{ chain_celestia_network }}
  loop:
    # Set gas price
    - regexp: ^(minimum-gas-prices\s*=\s*).*$
      line: \1"0.002utia"
    # Tendermint block pruning
    - regexp: ^(pruning\s*=\s*).*$
      line: \1"nothing"
    # Tendermint block pruning
    - regexp: ^(min-retain-blocks\s*=\s*).*$
      line: \1"0"
    # Enable gRPC server
    - regexp: (^\[grpc\]\n\n# Enable defines if the gRPC server should be enabled.\n)enable = .*$
      line: \1enable = true
    # Listen on 0.0.0.0 (gRPC)
    - regexp: (^# Address defines the gRPC server address to bind to.\n)address = .*$
      line: \1address = ":{{ chain_celestia_appd_grpc_port }}"

- name: Celestia-appd | config.toml
  ansible.builtin.replace:
    path: /home/{{ chain_celestia_user }}/.celestia-app/config/config.toml
    regexp: "{{ item.regexp }}"
    replace: "{{ item.line }}"
  notify: Restart celestia-app-{{ chain_celestia_network }}
  loop:
    # Listen on 0.0.0.0 (RPC)
    - regexp: (^\[rpc\]\n\n# TCP or UNIX socket address for the RPC server to listen on\n)laddr = "tcp://[^"]*"
      line: \1laddr = "tcp://0.0.0.0:{{ chain_celestia_appd_rpc_port }}"
    # Listen on 0.0.0.0 (P2P)
    - regexp: (^\[p2p\]\n\n# Address to listen for incoming connections\n)laddr = "tcp://[^"]*"
      line: \1laddr = "tcp://0.0.0.0:{{ chain_celestia_appd_p2p_port }}"
    # Set seeds
    - regexp: ^(seeds\s*=\s*).*$
      line: \1"{{ chain_celestia_appd_seeds }}"
    # Enable prometheus
    - regexp: ^(prometheus\s*=\s*).*$
      line: \1true
    # Listen on 0.0.0.0 (Prometheus)
    - regexp: ^(prometheus_listen_addr\s*=\s*).*$
      line: \1":{{ chain_celestia_appd_prometheus_port }}"
    # Set timeout_commit to 11s
    - regexp: ^(timeout_commit\s*=\s*).*$
      line: \1"11s"
    # Set indexer to null
    - regexp: ^(indexer\s*=\s*).*$
      line: \1"null"
    # Discard abci responses (saves disk space)
    - regexp: ^(discard_abci_responses\s*=\s*).*$
      line: \1true

- name: Celestia-appd | config.toml | Set persistent peers
  when: not node_init.stat.exists and chain_celestia_appd_peers is defined # noqa: no-handler
  ansible.builtin.replace:
    path: /home/{{ chain_celestia_user }}/.celestia-app/config/config.toml
    regexp: ^(persistent_peers\s*=\s*).*$
    replace: \1:"{{ chain_celestia_appd_peers }}"
  become: true
  become_user: "{{ chain_celestia_user }}"
  changed_when: true

- name: Celestia-appd | Enable systemd service
  ansible.builtin.systemd:
    name: celestia-app-{{ chain_celestia_network }}
    enabled: true
    state: started
    daemon_reload: true
